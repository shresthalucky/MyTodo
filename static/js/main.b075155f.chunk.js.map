{"version":3,"sources":["api/ApiUtils.js","components/Input/Input.jsx","components/Input/index.js","components/Button/Button.jsx","components/Button/index.js","pages/Login/index.js","pages/Login/Login.js","components/Nav/Nav.jsx","components/Nav/index.js","components/Todo/Todo.jsx","components/Todo/index.js","components/Modal/Modal.jsx","components/Modal/index.js","hoc/withLoading.js","pages/Home/Home.js","components/List/List.jsx","pages/Home/index.js","routes.js","App.js","index.js"],"names":["baseUrl","process","instance","axois","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","authorization","err","Promise","reject","Input","type","name","value","changeHandler","placeholder","required","className","onChange","Button","disabled","clickHandler","icon","children","onClick","Login","props","handleInput","e","setState","target","toggleDisable","isDisable","state","setErrorMessage","message","errorMessage","handleLogin","preventDefault","Api","post","username","password","then","res","tokenHandler","data","catch","response","handleRegister","from","this","location","pathname","to","onSubmit","React","Component","Nav","links","map","path","key","exact","Todo","detail","deleteHandler","updateHandler","editHandler","id","title","description","created","updated","status","useState","setIsDisable","showAction","setShowAction","Date","toDateString","stopPropagation","put","todo","console","log","finally","delete","Form","Modal","submitHandler","cancelHandler","initialData","loading","setTitle","setDescription","handleChange","withLoading","EnchancedList","isLoading","error","list","Home","handleForm","toggleFormLoading","editTodo","addNewTodo","toggleModal","todoList","handleUpdate","isPosting","modalData","showModal","handleDelete","filter","nav","get","currentPath","split","logoutHandler","Routes","basename","render","renderProps","App","setToken","setItem","removeToken","removeItem","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b075155f.chunk.js","sourcesContent":["import axois from 'axios';\n\nconst baseUrl = `${process.env.REACT_APP_API_DOMAIN}/api`;\n\nconst instance = axois.create({\n  baseURL: baseUrl,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\ninstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token') || '';\n  \n  if (token) {\n    config.headers.authorization = token;\n  }\n\n  return config;\n}, err => {\n  return Promise.reject(err);\n});\n\nexport default instance;\n","import React from 'react';\n\nfunction Input({ type, name, value, changeHandler, placeholder, required }) {\n  return (\n    <input\n      className=\"input input--primary\"\n      type={type}\n      name={name}\n      value={value}\n      onChange={changeHandler}\n      placeholder={placeholder}\n      required={required}\n    />\n  );\n}\n\nexport default Input;\n","import Input from './Input';\n\nexport default Input;\n","import React from 'react';\n\nfunction Button({ type, disabled, clickHandler, className, icon, children }) {\n\n  return (\n    <button\n      className={`btn btn--${className ? className : 'primary'}`}\n      type={type}\n      onClick={clickHandler}\n      disabled={disabled}>\n      {icon}\n      {children}\n    </button>\n  );\n}\n\nexport default Button;\n","import Button from './Button';\n\nexport default Button;\n","import Login from './Login';\n\nexport default Login;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { RiLoginCircleLine, RiAddCircleLine } from 'react-icons/ri';\n\nimport Api from '../../api/ApiUtils';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nclass Login extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      password: '',\n      isDisable: false,\n      errorMessage: '‏‏‎ ‎'\n    }\n  }\n\n  handleInput = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  toggleDisable = () => {\n    this.setState({\n      isDisable: !this.state.isDisable\n    });\n  }\n\n  setErrorMessage = (message) => {\n    this.setState({\n      errorMessage: message\n    });\n  }\n\n  handleLogin = (e) => {\n\n    e.preventDefault();\n    this.setErrorMessage('Logging in...');\n    this.toggleDisable();\n\n    Api.post('/users/login', {\n      username: this.state.username,\n      password: this.state.password\n    })\n      .then(res => {\n        this.props.tokenHandler(res.data);\n      })\n      .catch(err => {\n        this.setErrorMessage(err.response.data.message);\n        this.toggleDisable();\n      });\n  }\n\n  handleRegister = (e) => {\n\n    this.setErrorMessage('Registering...');\n    this.toggleDisable();\n\n    Api.post('/users/register', {\n      username: this.state.username,\n      password: this.state.password\n    })\n      .then(res => {\n        this.props.tokenHandler(res.data);\n      })\n      .catch(err => {\n        this.setErrorMessage(err.response.data.message);\n        this.toggleDisable();\n      });\n  }\n\n  render() {\n    const { from } = this.props.location.state || { from: { pathname: '/' } }\n\n    if (this.props.token) {\n      return <Redirect to={from} />\n    }\n\n    return (\n      <div className=\"outer-wrapper\">\n        <div className=\"outer-wrapper__cell\">\n          <div className=\"login-wrapper\">\n            <form onSubmit={this.handleLogin}>\n              <div className=\"login-wrapper__input\">\n                <Input\n                  type=\"text\"\n                  changeHandler={this.handleInput}\n                  value={this.state.username}\n                  name=\"username\"\n                  placeholder=\"username\"\n                  required={true} />\n              </div>\n              <div className=\"login-wrapper__input\">\n                <Input\n                  type=\"password\"\n                  changeHandler={this.handleInput}\n                  value={this.state.password}\n                  name=\"password\"\n                  placeholder=\"password\"\n                  required={true} />\n              </div>\n              <div className=\"errorMessage\">{this.state.errorMessage}</div>\n              <div className=\"login-buttons\">\n                <Button\n                  type=\"submit\"\n                  className=\"purple\"\n                  clickHandler={this.handleLogin}\n                  icon={<RiLoginCircleLine />}\n                  disabled={this.state.isDisable}>\n                  Login</Button>\n\n                <Button\n                  type=\"button\"\n                  className=\"blue\"\n                  clickHandler={this.handleRegister}\n                  icon={<RiAddCircleLine />}\n                  disabled={this.state.isDisable}>\n                  Register</Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nfunction Nav({ links }) {\n  return (\n    <ul className=\"nav\">\n      {links.map(path => {\n        return (\n          <li key={path.name}>\n            <NavLink to={path.to} className=\"nav__link\" exact>{path.name}</NavLink>\n          </li>\n        )\n      })}\n    </ul>\n  );\n}\n\nexport default Nav;\n","import Nav from './Nav';\n\nexport default Nav;\n","import React, { useState } from 'react';\n\nimport Api from '../../api/ApiUtils';\nimport Button from '../Button';\n\nfunction Todo({ detail, deleteHandler, updateHandler, editHandler }) {\n\n  const { id, title, description, created, updated, status } = detail;\n  const [isDisable, setIsDisable] = useState(false);\n  const [showAction, setShowAction] = useState(false);\n\n  const toggleShowAction = () => {\n    setShowAction(!showAction);\n  }\n\n  const deleteTodo = (e) => {\n    e.stopPropagation();\n    setIsDisable(true);\n\n    Api.delete(`/todos/${id}`)\n      .then(() => {\n        deleteHandler(id);\n      })\n      .catch(err => console.log(err));\n  }\n\n  const toggleStatus = (e) => {\n    e.stopPropagation();\n    setIsDisable(true);\n\n    const data = {\n      title,\n      description,\n      status: status === 'active' ? 'done' : 'active'\n    }\n\n    Api.put(`/todos/${id}`, data)\n      .then(todo => {\n        updateHandler(id, todo.data);\n      })\n      .catch(err => console.log(err))\n      .finally(() => {\n        setIsDisable(false);\n      });\n  }\n\n  const editTodo = (e) => {\n    e.stopPropagation();\n    editHandler(detail);\n  }\n\n  return (\n    <div className=\"todo\" onClick={toggleShowAction}>\n      <div className=\"todo__detail\">\n        <h2>{title}</h2>\n        <p>{description}</p>\n        <div className=\"todo-date\">\n          <span className=\"todo-date__created\">Created on {new Date(created * 1000).toDateString()}</span>\n          {created !== updated &&\n            <span className=\"todo-date__updated\">Updated on {new Date(updated * 1000).toDateString()}</span>\n          }\n        </div>\n      </div>\n      {showAction &&\n        <div className=\"todo__action\">\n          <Button type=\"button\" className=\"green\" clickHandler={toggleStatus} disabled={isDisable}>{status === 'done' ? 'Undone' : 'Done'}</Button>\n          <Button type=\"button\" className=\"purple\" clickHandler={editTodo} disabled={isDisable}>Edit</Button>\n          <Button type=\"button\" className=\"blue\" clickHandler={deleteTodo} disabled={isDisable}>Delete</Button>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default Todo;\n","import Todo from './Todo';\n\nexport default Todo;\n","import React, { useState } from 'react';\n\nimport Input from '../Input';\nimport Button from '../Button';\n\nfunction Form({ submitHandler, cancelHandler, initialData, loading }) {\n\n  const [title, setTitle] = useState(initialData.title || '');\n  const [description, setDescription] = useState(initialData.description || '');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const status = initialData.status || 'active';\n    submitHandler({ title, description, status }, initialData.id);\n  }\n\n  const handleChange = (e) => {\n    if (e.target.name === 'title') setTitle(e.target.value);\n    if (e.target.name === 'description') setDescription(e.target.value);\n  }\n\n  const handleClear = () => {\n    setTitle('');\n    setDescription('');\n  }\n\n  return (\n    <div className=\"modal-wrapper\">\n      <div className=\"modal-wrapper__cell\">\n        <div className=\"modal-form\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"modal-form__input\">\n              <Input name=\"title\" placeholder=\"Title\" changeHandler={handleChange} value={title} required={true} />\n            </div>\n            <div className=\"modal-form__input\">\n              <textarea className=\"modal-form__textarea\" name=\"description\" placeholder=\"Description\" onChange={handleChange} value={description} />\n            </div>\n            <div className=\"modal-form__action\">\n              <Button type=\"reset\" clickHandler={cancelHandler}>Cancel</Button>\n              <Button type=\"reset\" clickHandler={handleClear}>Clear</Button>\n              <Button className=\"purple\" type=\"submit\">{initialData.title ? 'Update' : 'Add'}</Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Form;\n","import Modal from './Modal';\n\nexport default Modal;\n","import React from 'react';\n\nfunction withLoading(Component) {\n\n  function LoadingComponent({ isLoading, error, ...props }) {\n\n    if (error) {\n      return (\n        <div className=\"loading\">Error Occured!</div>\n      );\n    }\n\n    if (!isLoading) {\n      return (<Component {...props} />)\n    }\n\n    return (<div className=\"loading\">Loading...</div>);\n\n  }\n\n  return LoadingComponent;\n}\n\nexport default withLoading;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport Api from '../../api/ApiUtils';\nimport Nav from '../../components/Nav';\nimport List from '../../components/List';\nimport Modal from '../../components/Modal';\nimport Button from '../../components/Button';\nimport withLoading from '../../hoc/withLoading';\n\nconst EnchancedList = withLoading(List);\n\nclass Home extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      todoList: [],\n      isLoading: true,\n      error: false,\n      isPosting: false,\n      showModal: false\n    }\n\n    this.nav = [\n      { name: 'All', to: '/' },\n      { name: 'Active', to: '/active' },\n      { name: 'Done', to: '/done' },\n    ]\n\n    this.modalData = {};\n  }\n\n  componentDidMount() {\n    if (this.props.token) {\n      Api.get('/todos')\n        .then(list => {\n          this.setState({\n            todoList: list.data,\n            isLoading: false\n          })\n        })\n        .catch(() => {\n          this.setState({ error: true })\n        });\n    }\n  }\n\n  handleForm = (data, id) => {\n    this.toggleFormLoading();\n    if (id) {\n      this.editTodo(data, id);\n    } else {\n      this.addNewTodo(data);\n    }\n  }\n\n  addNewTodo = (data) => {\n    Api.post('/todos', data)\n      .then(todo => {\n        this.toggleModal();\n        this.setState({\n          todoList: [todo.data, ...this.state.todoList]\n        });\n      })\n      .catch(err => console.log(err))\n      .finally(() => this.toggleFormLoading);\n  }\n\n  editTodo = (data, id) => {\n    Api.put(`/todos/${id}`, data)\n      .then(todo => {\n        this.handleUpdate(id, todo.data);\n        this.toggleModal();\n      })\n      .catch(err => console.log(err))\n      .finally(() => this.toggleFormLoading);\n  }\n\n  toggleFormLoading = () => {\n    this.setState({\n      isPosting: !this.state.isPosting\n    });\n  }\n\n  toggleModal = (data) => {\n\n    if (data) {\n      this.modalData = data;\n    } else {\n      this.modalData = {};\n    }\n\n    this.setState({\n      showModal: !this.state.showModal\n    });\n  }\n\n  handleDelete = (id) => {\n    this.setState({\n      todoList: this.state.todoList.filter(todo => {\n        if (todo.id === id) return false;\n        return true;\n      })\n    });\n  }\n\n  handleUpdate = (id, data) => {\n    this.setState({\n      todoList: this.state.todoList.map(todo => {\n        if (todo.id === id) return data;\n        return todo;\n      })\n    })\n  }\n\n  render() {\n    if (!this.props.token) {\n      return <Redirect to={{ pathname: '/login', state: { from: this.props.location } }} />\n    }\n\n    let list = this.state.todoList;\n    const currentPath = (this.props.location.pathname).split('/')[1];\n\n    if (currentPath === 'active' || currentPath === 'done') {\n      list = this.state.todoList.filter(todo => todo.status === currentPath);\n    }\n\n    return (\n      <div className=\"home\">\n        {this.state.showModal &&\n          <Modal submitHandler={this.handleForm} cancelHandler={this.toggleModal} loading={this.state.isPosting} initialData={this.modalData} />\n        }\n        <header className=\"header\">\n          <div className=\"header__left\">\n            <Nav links={this.nav} />\n          </div>\n          <div className=\"header__right\">\n            <Button type=\"button\" className=\"purple\" clickHandler={this.toggleModal}>Add Todo</Button>\n            <Button type=\"button\" className=\"blue\" clickHandler={this.props.logoutHandler}>Logout</Button>\n          </div>\n        </header>\n\n        <EnchancedList\n          error={this.state.error}\n          isLoading={this.state.isLoading}\n          deleteHandler={this.handleDelete}\n          updateHandler={this.handleUpdate}\n          editHandler={this.toggleModal}\n          list={list} />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\n\nimport Todo from '../Todo';\n\nfunction List({list, ...props}) {\n  return(\n    list.map(todo => <Todo detail={todo} key={todo.id} {...props} />)\n  );\n}\n\nexport default List;\n","import Home from './Home';\n\nexport default Home;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Login from './pages/Login';\nimport Home from './pages/Home';\n\nfunction Routes(props) {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route\n          exact\n          path='/login'\n          render={renderProps => <Login {...renderProps} {...props} />} />\n        <Route\n          path='/'\n          render={renderProps => <Home {...renderProps} {...props} />} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default Routes;\n","import React from 'react';\n\nimport Routes from './routes';\nimport Api from './api/ApiUtils';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      token: '',\n      id: '',\n      username: ''\n    }\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem('token') || '';\n\n    this.setState({ token: token });\n    \n    if (token) {\n      Api.get('/users')\n        .then(res => {\n          this.setToken(res.data);\n        })\n        .catch(() => this.removeToken);\n    }\n  }\n\n  setToken = ({ token, id, username }) => {\n    this.setState({\n      token,\n      id,\n      username\n    });\n\n    localStorage.setItem('token', token);\n  }\n\n  removeToken = () => {\n    this.setState({\n      token: '',\n      id: '',\n      username: ''\n    });\n\n    localStorage.removeItem('token');\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Routes token={this.state.token} tokenHandler={this.setToken} logoutHandler={this.removeToken} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}